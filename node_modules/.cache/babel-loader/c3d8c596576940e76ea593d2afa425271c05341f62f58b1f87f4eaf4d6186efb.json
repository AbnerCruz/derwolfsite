{"ast":null,"code":"function PriceCalculator(defaultHourPrice, discount, raw = false) {\n  if (typeof defaultHourPrice !== 'number' || typeof discount !== 'number') {\n    throw new TypeError(\"Ambos os argumentos devem ser números\");\n  }\n  const finalPrice = defaultHourPrice - defaultHourPrice * (discount / 100);\n  if (raw) return finalPrice;\n  return finalPrice.toLocaleString('pt-BR', {\n    style: 'currency',\n    currency: 'BRL',\n    minimumFractionDigits: 2\n  });\n}\n_c = PriceCalculator;\ne;\nvar _c;\n$RefreshReg$(_c, \"PriceCalculator\");","map":{"version":3,"names":["PriceCalculator","defaultHourPrice","discount","raw","TypeError","finalPrice","toLocaleString","style","currency","minimumFractionDigits","_c","e","$RefreshReg$"],"sources":["C:/Users/Abner/Desktop/Core/Trabalho/Nous Nova/Derwolf Site/src/NousNova/PriceCalculator.js"],"sourcesContent":["function PriceCalculator(defaultHourPrice, discount, raw = false) {\r\n  if (typeof defaultHourPrice !== 'number' || typeof discount !== 'number') {\r\n    throw new TypeError(\"Ambos os argumentos devem ser números\");\r\n  }\r\n\r\n  const finalPrice = defaultHourPrice - (defaultHourPrice * (discount / 100));\r\n\r\n  if (raw) return finalPrice;\r\n\r\n  return finalPrice.toLocaleString('pt-BR', {\r\n    style: 'currency',\r\n    currency: 'BRL',\r\n    minimumFractionDigits: 2,\r\n  });\r\n}\r\n\r\n\r\ne"],"mappings":"AAAA,SAASA,eAAeA,CAACC,gBAAgB,EAAEC,QAAQ,EAAEC,GAAG,GAAG,KAAK,EAAE;EAChE,IAAI,OAAOF,gBAAgB,KAAK,QAAQ,IAAI,OAAOC,QAAQ,KAAK,QAAQ,EAAE;IACxE,MAAM,IAAIE,SAAS,CAAC,uCAAuC,CAAC;EAC9D;EAEA,MAAMC,UAAU,GAAGJ,gBAAgB,GAAIA,gBAAgB,IAAIC,QAAQ,GAAG,GAAG,CAAE;EAE3E,IAAIC,GAAG,EAAE,OAAOE,UAAU;EAE1B,OAAOA,UAAU,CAACC,cAAc,CAAC,OAAO,EAAE;IACxCC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE,KAAK;IACfC,qBAAqB,EAAE;EACzB,CAAC,CAAC;AACJ;AAACC,EAAA,GAdQV,eAAe;AAiBxBW,CAAC;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}