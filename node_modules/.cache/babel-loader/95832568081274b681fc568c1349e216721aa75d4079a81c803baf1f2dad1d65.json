{"ast":null,"code":"const whatsappBaseURL = \"https://wa.me/5518996181770\";\nfunction WhatsappTextCreator() {\n  var _planosSelecionados$;\n  // Transforma \"Disciplina|plano\" em objetos\n  const planosSelecionados = textArray.map(item => {\n    const [disciplina, plano] = item.split(\"|\");\n    return {\n      disciplina,\n      plano\n    };\n  });\n\n  // Verifica se há seleções\n  const temSelecionado = planosSelecionados.length > 0;\n\n  // Assume que o plano é o mesmo para todas as disciplinas (você pode validar isso se quiser)\n  const planoSelecionado = ((_planosSelecionados$ = planosSelecionados[0]) === null || _planosSelecionados$ === void 0 ? void 0 : _planosSelecionados$.plano) || \"\";\n\n  // Mapeia nomes bonitos\n  const nomesDisciplinas = {\n    Matematica: \"Matemática\",\n    Musica: \"Música\",\n    Física: \"Física\"\n  };\n  const nomesPlanos = {\n    plano4: \"4 aulas\",\n    plano8: \"8 aulas\",\n    plano12: \"12 aulas\"\n  };\n\n  // Monta a mensagem se houver seleção\n  const mensagemFormatada = temSelecionado ? encodeURIComponent(`Eu gostaria de assinar o plano: ${nomesPlanos[planoSelecionado]}\\nCom as disciplinas:\\n` + planosSelecionados.map(({\n    disciplina\n  }) => `- ${nomesDisciplinas[disciplina] || disciplina}`).join(\"\\n\")) : \"\";\n  const whatsappLink = `${whatsappBaseURL}?text=${mensagemFormatada}`;\n  return whatsappLink;\n}\n_c = WhatsappTextCreator;\nexport default WhatsappTextCreator;\nvar _c;\n$RefreshReg$(_c, \"WhatsappTextCreator\");","map":{"version":3,"names":["whatsappBaseURL","WhatsappTextCreator","_planosSelecionados$","planosSelecionados","textArray","map","item","disciplina","plano","split","temSelecionado","length","planoSelecionado","nomesDisciplinas","Matematica","Musica","Física","nomesPlanos","plano4","plano8","plano12","mensagemFormatada","encodeURIComponent","join","whatsappLink","_c","$RefreshReg$"],"sources":["C:/Users/Abner/Desktop/Core/Trabalho/Nous Nova/Derwolf Site/src/NousNova/WhatsappTextCreator.js"],"sourcesContent":["const whatsappBaseURL = \"https://wa.me/5518996181770\";\r\n\r\nfunction WhatsappTextCreator(){\r\n    // Transforma \"Disciplina|plano\" em objetos\r\n    const planosSelecionados = textArray.map((item) => {\r\n    const [disciplina, plano] = item.split(\"|\");\r\n        return { disciplina, plano };\r\n    });\r\n    \r\n    // Verifica se há seleções\r\n    const temSelecionado = planosSelecionados.length > 0;\r\n    \r\n    // Assume que o plano é o mesmo para todas as disciplinas (você pode validar isso se quiser)\r\n    const planoSelecionado = planosSelecionados[0]?.plano || \"\";\r\n    \r\n    // Mapeia nomes bonitos\r\n    const nomesDisciplinas = {\r\n        Matematica: \"Matemática\",\r\n        Musica: \"Música\",\r\n        Física: \"Física\",\r\n    };\r\n    const nomesPlanos = {\r\n        plano4: \"4 aulas\",\r\n        plano8: \"8 aulas\",\r\n        plano12: \"12 aulas\",\r\n    };\r\n    \r\n    // Monta a mensagem se houver seleção\r\n    const mensagemFormatada = temSelecionado ? encodeURIComponent(`Eu gostaria de assinar o plano: ${nomesPlanos[planoSelecionado]}\\nCom as disciplinas:\\n` + planosSelecionados.map(({ disciplina }) => `- ${nomesDisciplinas[disciplina] || disciplina}`).join(\"\\n\")) : \"\";\r\n    \r\n    const whatsappLink = `${whatsappBaseURL}?text=${mensagemFormatada}`;\r\n    return whatsappLink;\r\n}\r\n\r\nexport default WhatsappTextCreator;"],"mappings":"AAAA,MAAMA,eAAe,GAAG,6BAA6B;AAErD,SAASC,mBAAmBA,CAAA,EAAE;EAAA,IAAAC,oBAAA;EAC1B;EACA,MAAMC,kBAAkB,GAAGC,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAK;IACnD,MAAM,CAACC,UAAU,EAAEC,KAAK,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;IACvC,OAAO;MAAEF,UAAU;MAAEC;IAAM,CAAC;EAChC,CAAC,CAAC;;EAEF;EACA,MAAME,cAAc,GAAGP,kBAAkB,CAACQ,MAAM,GAAG,CAAC;;EAEpD;EACA,MAAMC,gBAAgB,GAAG,EAAAV,oBAAA,GAAAC,kBAAkB,CAAC,CAAC,CAAC,cAAAD,oBAAA,uBAArBA,oBAAA,CAAuBM,KAAK,KAAI,EAAE;;EAE3D;EACA,MAAMK,gBAAgB,GAAG;IACrBC,UAAU,EAAE,YAAY;IACxBC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE;EACZ,CAAC;EACD,MAAMC,WAAW,GAAG;IAChBC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,OAAO,EAAE;EACb,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGX,cAAc,GAAGY,kBAAkB,CAAC,mCAAmCL,WAAW,CAACL,gBAAgB,CAAC,yBAAyB,GAAGT,kBAAkB,CAACE,GAAG,CAAC,CAAC;IAAEE;EAAW,CAAC,KAAK,KAAKM,gBAAgB,CAACN,UAAU,CAAC,IAAIA,UAAU,EAAE,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;EAExQ,MAAMC,YAAY,GAAG,GAAGxB,eAAe,SAASqB,iBAAiB,EAAE;EACnE,OAAOG,YAAY;AACvB;AAACC,EAAA,GA9BQxB,mBAAmB;AAgC5B,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}