{"ast":null,"code":"const whatsappBaseURL = \"https://wa.me/5518996181770\";\n\n// Mapeia nomes bonitos\nconst nomesDisciplinas = {\n  Matemática: \"Matemática\",\n  Música: \"Música\",\n  Física: \"Física\"\n};\nconst nomesPlanos = {\n  plano4: \"4 aulas\",\n  plano8: \"8 aulas\",\n  plano12: \"12 aulas\"\n};\n\n/**\r\n * Gera um link do WhatsApp formatado com base nas seleções\r\n * @param {string[]} textArray - Array de strings no formato \"Disciplina|plano\"\r\n * @returns {string} - URL formatada\r\n */\nfunction criarWhatsappLink(textArray) {\n  var _planosSelecionados$;\n  const planosSelecionados = textArray.map(item => {\n    const [disciplina, plano] = item.split(\"|\");\n    return {\n      disciplina,\n      plano\n    };\n  });\n  const temSelecionado = planosSelecionados.length > 0;\n  const planoSelecionado = ((_planosSelecionados$ = planosSelecionados[0]) === null || _planosSelecionados$ === void 0 ? void 0 : _planosSelecionados$.plano) || \"\";\n  const mensagem = temSelecionado ? `Eu gostaria de assinar o plano ${nomesPlanos[planoSelecionado]}\\nCom as disciplinas:\\n` + planosSelecionados.map(({\n    disciplina\n  }) => ` -${nomesDisciplinas[disciplina] || disciplina} `).join(\"\\n\") : \"\";\n  const mensagemCodificada = encodeURIComponent(mensagem);\n  return `${whatsappBaseURL}?text=${mensagemCodificada}`;\n}\nexport default criarWhatsappLink;","map":{"version":3,"names":["whatsappBaseURL","nomesDisciplinas","Matemática","Música","Física","nomesPlanos","plano4","plano8","plano12","criarWhatsappLink","textArray","_planosSelecionados$","planosSelecionados","map","item","disciplina","plano","split","temSelecionado","length","planoSelecionado","mensagem","join","mensagemCodificada","encodeURIComponent"],"sources":["C:/Users/Abner/Desktop/Core/Trabalho/Nous Nova/Derwolf Site/src/NousNova/WhatsappTextCreator.js"],"sourcesContent":["const whatsappBaseURL = \"https://wa.me/5518996181770\";\r\n\r\n// Mapeia nomes bonitos\r\nconst nomesDisciplinas = {\r\n  Matemática: \"Matemática\",\r\n  Música: \"Música\",\r\n  Física: \"Física\",\r\n};\r\nconst nomesPlanos = {\r\n  plano4: \"4 aulas\",\r\n  plano8: \"8 aulas\",\r\n  plano12: \"12 aulas\",\r\n};\r\n\r\n/**\r\n * Gera um link do WhatsApp formatado com base nas seleções\r\n * @param {string[]} textArray - Array de strings no formato \"Disciplina|plano\"\r\n * @returns {string} - URL formatada\r\n */\r\nfunction criarWhatsappLink(textArray) {\r\n  const planosSelecionados = textArray.map((item) => {\r\n    const [disciplina, plano] = item.split(\"|\");\r\n    return { disciplina, plano };\r\n  });\r\n\r\n  const temSelecionado = planosSelecionados.length > 0;\r\n  const planoSelecionado = planosSelecionados[0]?.plano || \"\";\r\n\r\n  const mensagem = temSelecionado\r\n    ? `Eu gostaria de assinar o plano ${nomesPlanos[planoSelecionado]}\\nCom as disciplinas:\\n` +\r\n      planosSelecionados\r\n        .map(({ disciplina }) => ` -${nomesDisciplinas[disciplina] || disciplina} `)\r\n        .join(\"\\n\")\r\n    : \"\";\r\n\r\n  const mensagemCodificada = encodeURIComponent(mensagem);\r\n  return `${whatsappBaseURL}?text=${mensagemCodificada}`;\r\n}\r\n\r\nexport default criarWhatsappLink;\r\n"],"mappings":"AAAA,MAAMA,eAAe,GAAG,6BAA6B;;AAErD;AACA,MAAMC,gBAAgB,GAAG;EACvBC,UAAU,EAAE,YAAY;EACxBC,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE;AACV,CAAC;AACD,MAAMC,WAAW,GAAG;EAClBC,MAAM,EAAE,SAAS;EACjBC,MAAM,EAAE,SAAS;EACjBC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,SAAS,EAAE;EAAA,IAAAC,oBAAA;EACpC,MAAMC,kBAAkB,GAAGF,SAAS,CAACG,GAAG,CAAEC,IAAI,IAAK;IACjD,MAAM,CAACC,UAAU,EAAEC,KAAK,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;IAC3C,OAAO;MAAEF,UAAU;MAAEC;IAAM,CAAC;EAC9B,CAAC,CAAC;EAEF,MAAME,cAAc,GAAGN,kBAAkB,CAACO,MAAM,GAAG,CAAC;EACpD,MAAMC,gBAAgB,GAAG,EAAAT,oBAAA,GAAAC,kBAAkB,CAAC,CAAC,CAAC,cAAAD,oBAAA,uBAArBA,oBAAA,CAAuBK,KAAK,KAAI,EAAE;EAE3D,MAAMK,QAAQ,GAAGH,cAAc,GAC3B,kCAAkCb,WAAW,CAACe,gBAAgB,CAAC,yBAAyB,GACxFR,kBAAkB,CACfC,GAAG,CAAC,CAAC;IAAEE;EAAW,CAAC,KAAK,KAAKd,gBAAgB,CAACc,UAAU,CAAC,IAAIA,UAAU,GAAG,CAAC,CAC3EO,IAAI,CAAC,IAAI,CAAC,GACb,EAAE;EAEN,MAAMC,kBAAkB,GAAGC,kBAAkB,CAACH,QAAQ,CAAC;EACvD,OAAO,GAAGrB,eAAe,SAASuB,kBAAkB,EAAE;AACxD;AAEA,eAAed,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}